//! Curve traits.
use core::fmt::Debug;

use bigint::U256;

use super::field::Field;

/// Elliptic curve.
///
/// This trait is intended to be impl'd by a ZST which represents a concrete
/// elliptic curve.
///
/// Other traits in this crate which are bounded by [`Curve`] are intended to
/// be impl'd by these ZSTs.
pub trait Curve:
    'static + Copy + Clone + Debug + Default + Eq + Ord + Send + Sync
{
    /// Order of this elliptic curve, i.e. number of elements in the finite
    /// field.
    ///
    /// This is the prime `p`.
    const ORDER: U256;
}

/// Parameters for elliptic curves of prime order which can be described by the
/// short Weierstrass equation.
pub trait PrimeCurveParams: Curve {
    /// The type of an element of the field.
    type FieldElement: Field + From<u64>;
    /// Coefficient `a` in the curve equation.
    const EQUATION_A: Self::FieldElement;
    /// Coefficient `b` in the curve equation.
    const EQUATION_B: Self::FieldElement;
    /// Generator point's affine coordinates: `(x, y)`.
    const GENERATOR: (Self::FieldElement, Self::FieldElement);
    /// The number of elements in the cyclic subgroup generated by
    /// [`Self::GENERATOR`].
    ///
    /// This is the order `n`.
    const SUBGROUP_ORDER: U256;
}
