# This workflow runs our end-to-end tests suite.
#
# It roughly follows these steps:
# - Install Rust
# - Install `cargo-stylus`
# - Install `solc`
# - Spin up `nitro-testnode`
#
# Contract deployments and account funding happen on a per-test basis.
name: e2e
permissions:
  contents: read
on:
  push:
    branches: [ main ]
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
jobs:
  required:
    name: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}-${{ github.event.number }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - name: cache cargo-stylus
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
          key: ${{ runner.os }}-cargo-bin-cargo-stylus
          save-always: true

      - name: set up rust
        uses: dtolnay/rust-toolchain@stable
        id: toolchain
        with:
          target: wasm32-unknown-unknown
          components: rust-src, llvm-tools-preview

      - name: install cargo-stylus
        run: cargo install --force cargo-stylus cargo-stylus-check

      - name: install solc
        run: |
          curl -LO https://github.com/ethereum/solidity/releases/download/v0.8.21/solc-static-linux
          sudo mv solc-static-linux /usr/bin/solc
          sudo chmod a+x /usr/bin/solc

      - name: setup nitro node
        run: ./scripts/nitro-testnode.sh -d -i
      - name: run integration tests
        run: |
          export NIGHTLY_TOOLCHAIN=${{steps.toolchain.outputs.name}}
          ./scripts/e2e-tests.sh

